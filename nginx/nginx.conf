# nginx.conf
# load_module modules/nginx_cookie_flag_module;

events {
    worker_connections 1024;
}

http {
    server_tokens off;
    upstream nextjs {
        server nextjs:8080;
    }

    server {
        listen 80;
        server_name localhost;
        root /srv/public;

        #Rewrite all nonssl requests to ssl.
        return 301 https://$host$request_uri;
    }

    server {

        client_max_body_size 100M;
        listen 443 ssl;
        server_name localhost;
        root /srv/public;
        ssl_certificate     /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        error_page 502 503 504 /maintenance.html;
        location = /maintenance.html {
            root /usr/share/nginx/html;
            internal;
        }

        location / {
            try_files $uri $uri/ @nextjs;
        }

        location @nextjs {
            proxy_connect_timeout 20;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_pass http://nextjs;
            proxy_cookie_path / "/; HTTPOnly; Secure";
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        location /cable {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Ssl on;
            proxy_set_header Host $http_host;
            proxy_pass http://nextjs;
            proxy_cookie_path / "/; HTTPOnly; Secure";
            proxy_redirect off;
            proxy_set_header Upgrade websocket;
            proxy_set_header Connection Upgrade;
        }

        # support only believed secure ciphersuites using the following priority:
        # 1.) prefer PFS enabled ciphers
        # 2.) prefer AES128 over AES256 for speed (AES128 has completely adequate security for now)
        # 3.) Support DES3 for IE8 support
        #
        # disable the following ciphersuites completely
        # 1.) null ciphers
        # 2.) ciphers with low security
        # 3.) fixed ECDH cipher (does not allow for PFS)
        # 4.) known vulnerable cypers (MD5, RC4, etc)
        # 5.) little-used ciphers (Camellia, Seed)
        # Only use secure protocols and ciphers.
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !kECDH !DSS !MD5 !EXP !PSK !SRP !CAMELLIA !SEED';
        ssl_prefer_server_ciphers on;

        # enable HSTS including subdomains
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    }
}
